#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2016-2018, Niklas Hauser
# Copyright (c) 2017, Fabian Greif
#
# This file is part of the modm project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# -----------------------------------------------------------------------------

def init(module):
    module.name = ":board:disco-f429zi"
    module.description = """\
# STM32F429IDISCOVERY

[Discovery kit for STM32F429](https://www.st.com/en/evaluation-tools/32f429idiscovery.html)

## Logging

To use the logging, you need to close SB11 and SB15 and upgrade the STLINK/V2-B
firmware! See Section 6.3 "Embedded ST-LINK/V2-B" of UM1670.

## TinyUSB

To use the USB port, you must configure TinyUSB to use the HS port in FS mode:

```xml
<option name="modm:tinyusb:max-speed">full</option>
<!-- place either the device or host classes on the HS port -->
<option name="modm:tinyusb:device:port">hs</option>
<option name="modm:tinyusb:host:port">hs</option>
```
"""

def prepare(module, options):
    if not options[":target"].partname.startswith("stm32f429zit"):
        return False

    module.depends(
        ":debug",
        ":architecture:clock",
        ":driver:l3gd20",
        ":platform:clock",
        ":platform:core",
        ":platform:gpio",
        ":platform:spi:5",
        ":platform:uart:1",
        ":platform:usb:hs")
    return True

def build(env):
    env.outbasepath = "modm/src/modm/board"
    env.substitutions = {
        "with_logger": True,
        "with_assert": env.has_module(":architecture:assert")
    }
    env.template("../board.cpp.in", "board.cpp")
    env.copy('.')
    env.collect(":build:openocd.source", "board/stm32f429discovery.cfg");
